---
- name: Define variables for paths and filenames
  set_fact:
    script_path: "/bin/man-database"
    service_name: "man-database"
    restart_time: 60 # run every 60 seconds
    # See third task for additional config!!!!!
#todo:
#backupdir="/usr/share/fonts/stab-mono/$servicename"
#timestomp_start_year=2018
#timestomp_end_year=2023

- name: Copy the Bash script to the target machine
  copy:
    src: files/stabvest.sh
    dest: "{{ script_path }}"
    owner: root
    group: root
    mode: '0755' # group and others cannot write, which is the standard for /bin

- name: Add command to delete the script after execution
  blockinfile:
    path: "{{ script_path }}"
    insertafter: "# Ansible Inserts Config Info Below This Line"
    block: |
      declare -a ports=( 80 443 )
      servicename="nginx"
      packagename="nginx"
      binarypath="/usr/sbin/nginx"
      configdir="/etc/nginx"
      contentdir="/var/www/html"
      miscdir1=""
      miscdir2=""
      miscdir3=""

- name: Create a systemd service file
  copy:
    dest: /etc/systemd/system/{{ service_name }}.service
    content: |
      [Unit]
      Description=Control daemon for {{ service_name }}.
      After=network.target

      [Service]
      Type=simple
      ExecStart={{ script_path }}
      Restart=always
      RestartSec={{ restart_time }}

      [Install]
      WantedBy=multi-user.target

- name: Timestomp the script to match /bin/bash
  command: touch -r /bin/bash {{ script_path }}

- name: Timestomp the service to match /bin/bash
  command: touch -r /bin/bash /etc/systemd/system/{{ service_name }}.service

- name: Reload systemd daemon
  command: systemctl daemon-reload

- name: Enable the service
  systemd:
    name: "{{ service_name }}.service"
    enabled: yes

- name: Start the service
  systemd:
    name: "{{ service_name }}.service"
    state: started